# 넘파이 배열을 사용하여 1부터 20까지의 연속된 정수값을 가지는 1차원 배열을 생성하여
# 실행결과와 같이 출력되기 위해 알맞은 코드를 쓰시오.

# 마지막 원소 : 20
# 모든 원소의 합 : 210
# 모든 원소의 평균 : 10.5
# [[ 1  2  3  4  5]
#  [ 6  7  8  9 10]
#  [11 12 13 14 15]
#  [16 17 18 19 20]]

import numpy as np

arr1 = np.arange(1, 21)

print('마지막 원소 : ', arr1[arr1.size -1])
print('마지막 원소 : ', arr1[-1])
print('모든 원소의 합 : ', arr1.sum())
print('모든 원소의 평균 : ', arr1.mean())
print(arr1.reshape(4, 5))
print()

# 학생들의 근로 장학금이 넘파이 배열에 저장되어 있다.
# 이번 학기 학생들의 근로장학금을 1.5배 올려주려고 한다.
# 다음은 인상된 근로장학금을 출력하고 근로장학금이 평균 근로장학금보다 많은 학생들의 근로장학금을 출력하고
# 원소의 수를 출력하는 프로그램이다.

salary = [200, 150, 180, 220, 250]

# 인상된 금액 : [300. 225. 270. 330. 375.]
# 평균 금액 : 300.0
# 평균이상인 원소 : [300. 330. 375.]
# 평균이상인 원소의 개수 : 3

arr = np.array(salary)
arr1 = arr * 1.5
print(f'인상된 금액 : {arr1}')
print(f'평균 금액 : {arr1.mean()}')
print(f'평균이상인 원소 : {arr1[arr1.mean() <= arr1]}')
arr_mean = arr1[arr1.mean() <= arr1]
# print(f'평균이상인 원소의 개수 : {(arr1[arr1.mean() <= arr1]).size}')
print(f'평균이상인 원소의 개수 : {arr_mean.size}')

